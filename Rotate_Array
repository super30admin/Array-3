//TimeComplexity.   O(n)
//Spacecomplexity.  O(1)

class Solution {
    public void rotate(int[] nums, int k) {        
        int n = nums.length;
        if(k >=n){
            k = k%n;
        }
        if(n-k == 0)return;

        int[] result = new int[n];
        int j= 0;
        for(int i = n-k; i < n; i++){
           
            result[j] = nums[i];
            
            j++;
        }

         for(int i = 0; i < n-k; i++){

            result[j] = nums[i];
            j++;
        }

         for(int i = 0; i < n; i++){

            nums[i] = result[i];

        }
        return;
    }
}
