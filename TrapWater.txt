/**
Time Complexity - O(n)
Space Complexity - O(1)
 */
class Solution {
    public int trap(int[] height) {
        int result = 0;
        int max = 0;
        int maxIdx = 0;
        for (int i=0; i< height.length; i++) {
            if (height[i] > max) {
                max = height[i];
                maxIdx = i;
            }
        }

        int l = 0;
        int lw = 0; // height
        while (l < maxIdx) {
            if ( lw > height[l]) {
                result += lw -height[l];
            } else {
                lw = height[l];
            }
            l++;
        }

        int r  = height.length-1;
        int rw = 0;
        while (r > maxIdx) {
            if (rw > height[r]) {
                result += rw - height[r];
            } else {
                rw = height[r];
            }
            r--;
        }
        return result;
    }
}
